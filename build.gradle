
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	// 테스트 커버리지 리포트용 JaCoCo 플러그인
	id 'jacoco'

    // sentry
    id "io.sentry.jvm.gradle" version "5.12.0"
}

group = 'com.manwon.happiness'
version = '0.0.1-SNAPSHOT'
description = 'Backend for "Happiness by Manwon" service'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'

	// 테스트용 H2 DB 추가
	testImplementation 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
	useJUnitPlatform()
	// 테스트 끝나고 커버리지 리포트도 자동 생성
	finalizedBy 'jacocoTestReport'
}

// JaCoCo 리포트 설정
jacocoTestReport {
	dependsOn test // test 실행 후 리포트 생성
	reports {
		xml.required = true    // CI/CD에서 활용 가능 (원하면 꺼도 됨)
		csv.required = false
		html.required = true   // 로컬에서 확인할 때 주로 씀
		html.outputLocation = layout.buildDirectory.dir("jacocoHtml")
	}
}

def hasSentryToken = System.getenv("SENTRY_AUTH_TOKEN") != null

sentry {
    // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
    // This enables source context, allowing you to see your source
    // code as part of your stack traces in Sentry.
    includeSourceContext = hasSentryToken

    org = "manwonz"
    projectName = "manwonz"
    authToken = System.getenv("SENTRY_AUTH_TOKEN")
}
